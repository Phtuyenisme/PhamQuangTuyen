-- UI Hi·ªán ƒê·∫°i D·ª±a Tr√™n OrionLib (C·∫£i Ti·∫øn, K√©o Th·∫£ M∆∞·ª£t Cho C·∫£ UI & ToggleButton)
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

-- üìå T·∫°o UI Ch√≠nh (Nh·ªè G·ªçn)
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = LocalPlayer:WaitForChild("PlayerGui") -- ‚ö° ƒê·∫£m b·∫£o hi·ªÉn th·ªã ƒë√∫ng

local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0, 400, 0, 250) -- ‚ö° Gi·∫£m k√≠ch th∆∞·ªõc UI
MainFrame.Position = UDim2.new(0.5, -200, 0.5, -125) -- ‚ö° CƒÉn gi·ªØa
MainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
MainFrame.BorderSizePixel = 0
MainFrame.Parent = ScreenGui

local UICorner = Instance.new("UICorner")
UICorner.CornerRadius = UDim.new(0, 10)
UICorner.Parent = MainFrame

-- üìå N√∫t Thu Nh·ªè UI
local MinimizeButton = Instance.new("TextButton")
MinimizeButton.Size = UDim2.new(0, 30, 0, 30)
MinimizeButton.Position = UDim2.new(1, -70, 0, 5) -- ‚ö° G√≥c ph·∫£i, c√°ch 70px t·ª´ m√©p
MinimizeButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
MinimizeButton.Text = "-"
MinimizeButton.Font = Enum.Font.GothamBold
MinimizeButton.TextSize = 20
MinimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
MinimizeButton.Parent = MainFrame

local isMinimized = false
MinimizeButton.MouseButton1Click:Connect(function()
    isMinimized = not isMinimized
    if isMinimized then
        TweenService:Create(MainFrame, TweenInfo.new(0.3), {Size = UDim2.new(0, 400, 0, 40)}):Play()
    else
        TweenService:Create(MainFrame, TweenInfo.new(0.3), {Size = UDim2.new(0, 400, 0, 250)}):Play()
    end
end)

-- üìå N√∫t Tho√°t UI
local CloseButton = Instance.new("TextButton")
CloseButton.Size = UDim2.new(0, 30, 0, 30)
CloseButton.Position = UDim2.new(1, -35, 0, 5) -- ‚ö° G√≥c ph·∫£i, c√°ch 35px t·ª´ m√©p
CloseButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
CloseButton.Text = "X"
CloseButton.Font = Enum.Font.GothamBold
CloseButton.TextSize = 16
CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
CloseButton.Parent = MainFrame

CloseButton.MouseButton1Click:Connect(function()
    ScreenGui:Destroy() -- ‚ö° X√≥a UI ho√†n to√†n
end)

-- üìå Ti√™u ƒë·ªÅ (D√πng l√†m khu v·ª±c k√©o UI)
local Title = Instance.new("TextLabel")
Title.Size = UDim2.new(1, 0, 0, 40)
Title.BackgroundTransparency = 1
Title.Text = "UI Mini - Phtuyenz"
Title.TextSize = 16 -- ‚ö° Ch·ªØ nh·ªè h∆°n
Title.Font = Enum.Font.GothamBold
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.Parent = MainFrame

-- üìå H·ªá Th·ªëng Tab (Danh s√°ch Tab)
local TabMenu = Instance.new("Frame")
TabMenu.Size = UDim2.new(1, 0, 0, 40)
TabMenu.Position = UDim2.new(0, 0, 0, 40)
TabMenu.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
TabMenu.Parent = MainFrame

-- üìå Khu v·ª±c hi·ªÉn th·ªã n·ªôi dung Tab
local TabContent = Instance.new("Frame")
TabContent.Size = UDim2.new(1, 0, 1, -80) -- ‚ö° Tr·ª´ ph·∫ßn ti√™u ƒë·ªÅ & Tab Menu
TabContent.Position = UDim2.new(0, 0, 0, 80)
TabContent.BackgroundTransparency = 1
TabContent.Parent = MainFrame

-- üìå H·ªá th·ªëng `MakeTab()`
local Tabs = {}

function MakeTab(tabName)
    -- üìå T·∫°o Tab Button
    local TabButton = Instance.new("TextButton")
    TabButton.Size = UDim2.new(0, 100, 0, 40)
    TabButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    TabButton.Text = tabName
    TabButton.Font = Enum.Font.GothamBold
    TabButton.TextSize = 14
    TabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    TabButton.Parent = TabMenu

    -- üìå T·∫°o khu v·ª±c n·ªôi dung Tab
    local TabFrame = Instance.new("Frame")
    TabFrame.Size = UDim2.new(1, 0, 1, 0)
    TabFrame.BackgroundTransparency = 1
    TabFrame.Visible = false
    TabFrame.Parent = TabContent

    -- üìå Th√™m Tab v√†o danh s√°ch
    Tabs[tabName] = TabFrame

    -- üìå X·ª≠ l√Ω khi b·∫•m v√†o Tab
    TabButton.MouseButton1Click:Connect(function()
        for _, frame in pairs(Tabs) do
            frame.Visible = false
        end
        TabFrame.Visible = true
    end)
    
    return TabFrame
end

-- üìå H·ªá Th·ªëng K√©o Th·∫£ UI Ch√≠nh
local DraggingUI, DragStartUI, StartPosUI

Title.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        DraggingUI = true
        DragStartUI = input.Position
        StartPosUI = MainFrame.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                DraggingUI = false
            end
        end)
    end
end)

Title.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        DragInputUI = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if DraggingUI and input == DragInputUI then
        local delta = input.Position - DragStartUI
        MainFrame.Position = UDim2.new(0, StartPosUI.X.Offset + delta.X, 0, StartPosUI.Y.Offset + delta.Y)
    end
end)

-- üìå T·∫°o UI Ri√™ng Cho N√∫t ·∫®n/Hi·ªán
local ToggleGui = Instance.new("ScreenGui")
ToggleGui.ResetOnSpawn = false -- ‚ö° ƒê·∫£m b·∫£o n√∫t kh√¥ng b·ªã m·∫•t khi respawn
ToggleGui.Parent = LocalPlayer:WaitForChild("PlayerGui") -- ‚ö° ƒê·∫£m b·∫£o hi·ªÉn th·ªã

-- üìå T·∫°o N√∫t ·∫®n/Hi·ªán UI (D√πng ImageButton)
local ToggleButton = Instance.new("ImageButton")
ToggleButton.Size = UDim2.new(0, 50, 0, 50) -- ‚ö° K√≠ch th∆∞·ªõc l·ªõn h∆°n ƒë·ªÉ d·ªÖ k√©o
ToggleButton.Position = UDim2.new(0.2, 0, 0.85, 0) -- ‚ö° CƒÉn ch·ªânh v·ªã tr√≠ g√≥c tr√°i
ToggleButton.BackgroundTransparency = 1
ToggleButton.Image = "rbxassetid://7072719338" -- ‚ö° Thay b·∫±ng ID ·∫£nh b·∫°n mu·ªën
ToggleButton.Parent = ToggleGui

local isHidden = false
ToggleButton.MouseButton1Click:Connect(function()
    isHidden = not isHidden
    MainFrame.Visible = not isHidden
    ToggleButton.Image = isHidden and "rbxassetid://7072720870" or "rbxassetid://7072719338" -- ‚ö° ƒê·ªïi icon khi ·∫©n/hi·ªán
end)

-- üìå H·ªá Th·ªëng K√©o Th·∫£ Cho N√∫t ·∫®n/Hi·ªán
local DraggingToggle, DragStartToggle, StartPosToggle

ToggleButton.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        DraggingToggle = true
        DragStartToggle = input.Position
        StartPosToggle = ToggleButton.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                DraggingToggle = false
            end
        end)
    end
end)

ToggleButton.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        DragInputToggle = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if DraggingToggle and input == DragInputToggle then
        local delta = input.Position - DragStartToggle
        ToggleButton.Position = UDim2.new(0, StartPosToggle.X.Offset + delta.X, 0, StartPosToggle.Y.Offset + delta.Y)
    end
end)

-- üìå ƒê·∫£m b·∫£o n√∫t lu√¥n hi·ªÉn th·ªã ƒë√∫ng
ToggleButton.AnchorPoint = Vector2.new(0.5, 0.5)
ToggleButton.ZIndex = 10 -- ‚ö° Lu√¥n n·∫±m tr√™n c√πng
